#!/usr/bin/env bash

cli_log(){
    script_name=${0##*/}
    timestamp=$(date -u +"%Y-%m-%d%T%H:%M:%SZ")
    echo "== $script_name $timestamp $1"
}

log_conn_options(){
	echo "
    -U --user=user
    -W --password=password
    -p --port=port
       --host=host
    -n --name=name
    -c --config=path/to/config
    -h --help
"
}

parse_options(){
    configFile="$WORKDIR/sqldec.config"
    if [ -f "$configFile" ]; then
        echo "reading config file $configFile"
        . "$configFile"
        echo "$PORT"
    fi

	LONGOPTS=user:,password:,port:,host:,name:,config:schema:,help
	OPTIONS=U:W:p:h:n:c:s:
	PARSED=$(getopt --options=$OPTIONS --longoptions=$LONGOPTS --name "$0" -- "$@")
	if [[ ${PIPESTATUS[0]} -ne 0 ]]; then
    		# e.g. return value is 1
    		#  then getopt has complained about wrong arguments to stdout
    		exit 2
	fi

	echo "parsed $PARSED"
	eval set -- "$PARSED"

    if [ ! -z "${USERNAME:-}" ]; then U=$USERNAME; else U=-; fi 
    if [ ! -z "${PASSWORD:-}" ]; then W=$PASSWORD; else W=-; fi 
    if [ ! -z "${HOST:-}" ]; then h=$HOST; else h=-; fi 
    if [ ! -z "${PORT:-}" ]; then p=$PORT; else p=-; fi 
    if [ ! -z "${SCHEMA:-}" ]; then s=$SCHEMA; else s=-; fi 
    if [ ! -z "${DATABASE:-}" ]; then n=$DATABASE; else n=-; fi 
    while true; do
        case "$1" in
            -U|--user)
                U="$2"
                shift 2
                ;;
            -W|--password)
                W="$2"
                shift 2
                ;;
            -h|--host)
                h="$2"
                shift 2
                ;;
            -p|--port)
                p="$2"
                shift 2
                ;;
            -n|--name)
                n="$2"
                shift 2
                ;;
            -c|--config)
                c="$2"
                shift 2
                ;;
            --help)
                h=y
                shift
                ;;
            --)
                shift
                break
                ;;
            *)
                echo "$2"
                echo "Unknown argument"
                exit 3
                ;;
        esac
    done
}
